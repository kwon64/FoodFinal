<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="friendDAO">



	<!-- 밥친구게시판 글 등록하기  -->
	<insert id="friendsave" parameterType="friend">
	insert into friendboard 
	(f_no , f_title , f_content, f_addr , f_membercnt,f_viewcount,f_date, m_id )
	values
	( friend_f_no.nextval , #{f_title} , #{f_content},#{f_addr} , #{f_membercnt}
	,#{f_viewcount},sysdate ,#{m_id})
	</insert>
	
	<!-- 밥친구게시판 글 목록 가져오기  -->
	<select id="getmealFriends" parameterType="hashmap" resultType="friend">
		SELECT * 
	
		FROM (
			SELECT ROWNUM RN, A.* 
				FROM (
						SELECT * 
						FROM friendBoard
						ORDER BY f_no DESC 
						) A
				)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 밥친구게시판 글 상세보기 -->
	<select id="mealboardView" parameterType="friend" resultType="friend">
		select * from friendBoard where f_no = #{f_no}
	</select>
	
	<!-- 밥친구게시판 글 상세보기시 조회수 증가 -->
	<update id="mealboardViewcount" parameterType="friend">
		UPDATE friendBoard SET f_viewcount = f_viewcount+1 WHERE f_no = #{f_no}
	</update>
	
	<!-- 밥친구게시판 글 전체수 -->
	<select id="friendBoardcount" resultType="Int">
		select count(*) from friendBoard
	</select>
	
	<!-- 밥친구게시판 글 수정하기 -->
	<update id="friendmodify" parameterType="friend" >
		UPDATE friendBoard SET f_title = #{f_title},f_content = #{f_content} , 
		f_addr = #{f_addr} , f_membercnt = #{f_membercnt} 
		WHERE f_no = #{f_no}
	</update>
	
	<!-- 밥친구게시판 글 삭제하기 -->
	<delete id="friendsdelete" parameterType="friend">
		DELETE FROM friendBoard WHERE f_no = #{f_no} AND m_id = #{m_id} 
	</delete>
	

</mapper>